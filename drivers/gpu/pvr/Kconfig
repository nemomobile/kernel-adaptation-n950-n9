menuconfig PVR
	tristate "PowerVR Services"
	depends on OMAP2_DSS

if PVR

choice
	prompt "Build type"
	default PVR_RELEASE
config PVR_RELEASE
	bool "Release"
config PVR_DEBUG
	bool "Debug"
config PVR_TIMING
	bool "Timing"
endchoice

config PVR_DEBUG_EXTRA
	bool "Extra debugging info"
	depends on PVR_DEBUG
	help
	    This enables extra debugging facilities on top of what you
	    get with setting debug build type above. This effectively
	    changes the driver's ABI, so the user space clients using
	    the driver need to be built in debug mode as well.

config PVR_DEBUG_PDUMP
	bool "PDUMP debug support"
	depends on PVR && DEBUG_FS && PVR_DEBUG_EXTRA
	default n
	help
	    This enables Pdump logging.

choice
	prompt "Pdump initial debugging mode"
	depends on PVR_DEBUG_PDUMP
	default PVR_PDUMP_MODE_STANDARD

config PVR_PDUMP_MODE_DISABLED
	bool "Disabled"
	help
	    In this pdump mode, no information will be captured.

config PVR_PDUMP_MODE_STANDARD
	bool "Standard"
	help
	    This PDumpmode catches some of the information generated by both
	    kernel and pvr userspace.

config PVR_PDUMP_MODE_FULL
	bool "Full"
	help
	    This PDumpmode catches all information generated by both kernel
	    and pvr userspace. This mode is needed for allowing Imagination
	    Technologies to run a pdump log through their simulator.

endchoice

config PVR_PDUMP_INITIAL_MAX_FRAME_COUNT
	int "Pdump max frame count"
	range 1 1024
	default 16
	depends on PVR_DEBUG_PDUMP
	help
	    This value sets how many frames will be retained at any time; the oldest
	    frames will be removed first. This value can be set from 1 to 1024.

config PVR_EDM_DEBUG
	depends on PVR
	bool "Enable EDM trace"
	default n
	help
	    This will print the micro kernel (EDM) tracing buffer in case
	    of a HW recovery event. You also need a micro kernel that was
	    configured to generate this trace.

config PVR_TRACE_CMD
	depends on PVR
	bool "Enable GPU command tracing"
	default n
	help
	    This will enable a lightweight tracer of commands submitted
	    to the GPU.

	    Besides the command type the trace output will provide the
	    timestamp, id and name of the submitting process and a
	    a snapshots of the synchronization counters related to the
	    given command.

	    The trace can help for example in debugging dead-lock
	    situations caused by circular lock dependencies.

config PVR_TRACE_CMD_BUF_SHIFT
	int "Command tracing buf size"
	range 1 10
	default 3
	depends on PVR_TRACE_CMD
	help
	    Select the number of pages (as a power of 2) set aside for
	    the command trace buffer.
	    Examples:
		    1  -> 4kB
		    3  -> 32kB
		    10 -> 4MB

config PVR_NO_HARDWARE
	bool
	default n

config PVR_FORCE_CLOCKS_ON
	bool "Force clocks on"
	depends on !PVR_NO_HARDWARE
	default n

config PVR_EXAMPLES
	tristate "Example code"
	default n

endif

